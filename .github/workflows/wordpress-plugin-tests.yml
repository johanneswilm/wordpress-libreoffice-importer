name: WordPress Plugin Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  phpcs:
    name: PHP Code Standards
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        tools: composer, cs2pr
    
    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
    
    - name: Cache composer dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-
    
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
    
    - name: Run PHPCS
      run: composer run-script cs

  php-lint:
    name: PHP Syntax Check
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php: ['7.4', '8.0', '8.1', '8.2']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup PHP ${{ matrix.php }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: zip, xml, dom, simplexml
    
    - name: PHP Syntax Check
      run: find . -type f -name '*.php' ! -path './vendor/*' -exec php -l {} \;

  test-plugin:
    name: Test Plugin (WP ${{ matrix.wordpress }} / PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php: ['7.4', '8.0', '8.1']
        wordpress: ['6.0', '6.1', '6.2', '6.3', '6.4', 'latest']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup PHP ${{ matrix.php }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: zip, xml, dom, simplexml, gd, mbstring
        coverage: none
    
    - name: Setup WordPress
      run: |
        # Install WordPress test suite
        bash bin/install-wp-tests.sh wordpress_test root 'root' localhost ${{ matrix.wordpress }}
      continue-on-error: true
    
    - name: Install plugin
      run: |
        # Simulate plugin installation
        mkdir -p /tmp/wordpress/wp-content/plugins/libreoffice-importer
        cp -r . /tmp/wordpress/wp-content/plugins/libreoffice-importer/
      continue-on-error: true
    
    - name: Verify PHP extensions
      run: |
        php -m | grep -i zip || (echo "ZIP extension not found" && exit 1)
        php -m | grep -i xml || (echo "XML extension not found" && exit 1)
        php -m | grep -i dom || (echo "DOM extension not found" && exit 1)
        php -m | grep -i simplexml || (echo "SimpleXML extension not found" && exit 1)

  javascript-lint:
    name: JavaScript Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      continue-on-error: true
    
    - name: Run ESLint
      run: npm run lint
      continue-on-error: true

  security-check:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        tools: composer
    
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
      continue-on-error: true
    
    - name: Run security check
      run: composer audit
      continue-on-error: true

  build-plugin:
    name: Build Plugin Package
    runs-on: ubuntu-latest
    needs: [phpcs, php-lint, test-plugin]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Create plugin package
      run: |
        mkdir -p build
        rsync -av --progress . build/libreoffice-importer \
          --exclude .git \
          --exclude .github \
          --exclude node_modules \
          --exclude vendor \
          --exclude build \
          --exclude tests \
          --exclude .gitignore \
          --exclude .editorconfig \
          --exclude composer.json \
          --exclude composer.lock \
          --exclude package.json \
          --exclude package-lock.json
        cd build
        zip -r libreoffice-importer-${{ github.sha }}.zip libreoffice-importer
    
    - name: Upload plugin package
      uses: actions/upload-artifact@v3
      with:
        name: libreoffice-importer-plugin
        path: build/libreoffice-importer-*.zip
        retention-days: 30

  deploy-tag:
    name: Deploy Release
    runs-on: ubuntu-latest
    needs: [build-plugin]
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Download plugin package
      uses: actions/download-artifact@v3
      with:
        name: libreoffice-importer-plugin
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: libreoffice-importer-*.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}